extends layouts/_layout.pug

block title
	title #{title} - Tagpro.dev

block content
	main#main
		header
			h2.page-select= title

		.page-filter
			.drop-down.season
				.drop-down_label Filter by Season
				.drop-down_current(role="button")
					span.value All
					.drop-down_list
						ul.check-list
							li(role="option")
								.form_checkbox-wrapper
									input(type="checkbox", name="season", id="season_all" value="all" checked)
									label(for="season_all") All
							li(role="option")
								.form_checkbox-wrapper
									input(type="checkbox", name="season", id="season_euctfs2" value="2" disabled)
									label(for="season_euctfs2") EU CTF S2
							li(role="option")
								.form_checkbox-wrapper
									input(type="checkbox", name="season", id="season_euctfs1" value="1" disabled)
									label(for="season_euctfs1") EU CTF S1

			.drop-down.map
				.drop-down_label Filter by Map
				.drop-down_current(role="button")
					span.value All
					.drop-down_list
						ul.check-list
							li(role="option" class="filter-all")
								.form_checkbox-wrapper
									input(type="checkbox" name="map" id="map_all" value="all" checked)
									label(for="map_all") All
							each raw in maps
								li(role="option")
									.form_checkbox-wrapper
										input(type="checkbox", name="map", id='map_'+raw.id, value= raw.id, disabled)
										label(for='map_'+raw.id)= raw.name

			.drop-down.elo
				.drop-down_label Filter by ELO
				.drop-down_current(role="button")
					span.value 2000-3000
					.drop-down_list(style="width:150%" class="pad")
						p.desc Average ELO across both teams
						#slider.slider

			.filter-submit
				button.button-secondary Apply

		section
			table.table-sticky
				thead
					each raw in results
						- function th(string){ return string.replace(/(?:_| |\b)(\w)/g, function($1){return $1.toUpperCase().replace('_',' ')})}

						tr
							- let n = 0
							- let last = Object.keys(raw).length
							each v, k in raw
								-- ++n
								if(k === 'rank')
									th(style="width:70px")
								else if(k === 'player')
									th Player
								else
									if(last === n)
										th.text-c.sort.sort-desc
											span= th(k)
									else
										th.text-c.sort
											span= th(k)
							- break

				tbody
					each raw in results
						tr
							each v, k in raw
								if(k === 'rank' || k === 'player')
									td.bold= v
								else
									td.text-c= v
